# -*- coding: utf-8 -*-
"""cifar10_resnet_with_transfer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wBGroI5Kqf8VItb3qyOx524A0cY-WZMu

전이학습을 위한 파이썬 라이브러리를 임포트 한다.
"""

import tensorflow as tf
from tensorflow.keras.layers import Dense, Flatten, MaxPooling2D
from tensorflow.keras import datasets
from tensorflow.keras.applications.resnet50 import preprocess_input
from tensorflow.keras.applications.resnet50 import ResNet50
from tensorflow.keras import Input
from tensorflow.keras.layers import Dropout, BatchNormalization

"""CIFAR10 데이터셋을 불러온다. """

(train_images, train_labels), (test_images, test_labels) = datasets.cifar10.load_data()
print(train_images.shape)
print(train_labels.shape)

"""다운로드한 이미지를 시각화 한다. """

from google.colab.patches import cv2_imshow
import cv2  # Install opencv-python
cv2_imshow(train_images[0])
cv2.waitKey(2000)
cv2.destroyAllWindows()
print(train_labels[0])

"""미리 훈련이 된 신경망인 ResNet을 가져온다. 
trainable을 false로 한다. 
include_top도 false로 한다.  
"""

base_model = ResNet50(include_top=False, pooling = 'avg' , input_shape = (32,32 ,3), weights = 'imagenet')
base_model.trainable = False
print(base_model.summary())

"""label 데이터를 수치화 해준다. 라벨바이나리징과 같은 작업이다. """

print(train_labels[0])
print(test_labels[0])
input_y = tf.keras.utils.to_categorical(train_labels, 10)
test_y = tf.keras.utils.to_categorical(test_labels, 10)
print(input_y.shape, test_y.shape)
print(input_y[0])
print(test_y[0])

"""전이학습을 위한 모델을 설계한다. 
모델은 기존 LesNet 컨버루션 모델에 우리가 사용할 NN레이어를 결합한다. 
"""

inputs = Input(shape=(32,32,3))
x = tf.keras.layers.experimental.preprocessing.Resizing(32, 32)(inputs)
x = tf.keras.applications.resnet50.preprocess_input(inputs)
x = base_model(x, training = False)
x = Flatten()(x)								# Fully Connected에 온전하게 학습을 위해 펼쳐준다	
outputs = Dense(10, activation = 'softmax')(x)	# Softmax 함수로 10개 분류하는 분류기 
model_res = tf.keras.Model(inputs, outputs)	# model_res 란 이름의 인풋과 아웃풋이 정해진 모델 생성
print(model_res.summary())

"""pre-trained 모델인 ResNet과 사용자가 정의한 NN을 결합한 전이학습 모델을 구성한다. """

model_res.compile(optimizer = tf.keras.optimizers.Adam(learning_rate= 0.001),
                  loss = 'categorical_crossentropy',
                  metrics=['accuracy'])

"""전이학습 모델을 트레이닝 한다. """

model_res.fit(train_images, input_y, epochs = 10, validation_data=(test_images, test_y), batch_size= 256)